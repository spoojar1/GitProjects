SP1
CREATE OR REPLACE PROCEDURE assign_tech (
Service_Id IN CustomerService.Service_Id%Type, R_SID IN Staff.SID%Type, tmpDate IN DATE) AS
CURSOR C_TECH 
	IS
		select S_ID from Technician where availablity='Y' and rownum=1;
	R_TECH C_TECH%ROWTYPE;
BEGIN
	OPEN C_TECH;
	FETCH C_TECH INTO R_TECH;
	IF C_TECH%NOTFOUND THEN
		DBMS_OUTPUT.put_line('No technician is available right now');
	ELSE
		insert into Technician_Service values (Service_Id,R_TECH.S_ID,tmpDate,'',R_SID);
		UPDATE Technician SET availablity='N' WHERE S_ID=R_TECH.S_ID;
	END IF;
	CLOSE C_TECH;
END

SP2
ENTER CALL REPORT AND SET AVAILABILITY TO Y

SP4
create or replace procedure Calc_Fines AS
CURSOR c_due_check
   IS
      SELECT BILL_ID FROM BILLS
	  WHERE (DUE_DATE+10)<TO_DATE(SYSDATE,'DD-MON-YY')
	  AND STATUS='N';
	due_check   c_due_check%ROWTYPE;
BEGIN
	OPEN c_due_check;
	LOOP
		FETCH c_due_check INTO due_check;
			UPDATE BILLS 
			SET FINES=(0.005*TOT_CHARGE)*ROUND(SYSDATE-DUE_DATE)),
			TOT_CHARGE=ORIGINAL_CHARGE+(0.005*TOT_CHARGE)*ROUND(SYSDATE-DUE_DATE))
			WHERE BILL_ID=due_check.BILL_ID;
		EXIT WHEN c_due_check%NOTFOUND;
	END LOOP;
	CLOSE c_due_check;
END;

SP3
create or replace procedure Calc_Bill(
ACC_ID IN Mobile.Account_Id%Type,
START_DATE IN BILLS.CYCLE_START%TYPE,
END_DATE IN BILLS.CYCLE_END%TYPE) AS
CURSOR c_bill
   IS
    SELECT SUM(CHARGE) AS COST
	FROM MOBILE M JOIN MOBILE_SERVICE MS
	ON M.MOBILE_NO=MS.MOBILE_NO
	JOIN M_SERVICE_PLAN MP
	ON MS.MSERVICE_ID=MP.MSERVICE_ID
	WHERE M.Account_ID=ACC_ID
	GROUP BY M.MOBILE_NO;
	r_bill   c_bill%ROWTYPE;
	BASIC_CHARGE NUMBER;
	TOT_CHARGE NUMBER;
	NEXTBILLID NUMBER;
BEGIN
	TOT_CHARGE=0;
	OPEN c_bill;
	LOOP
		FETCH c_bill INTO r_bill;
			TOT_CHARGE=TOT_CHARGE+r_bill.COST;
		EXIT WHEN c_bill%NOTFOUND;
	END LOOP;
		SELECT MAX(BILL_ID)+1 INTO NEXTBILLID FROM BILLS;
		
		SELECT CHARGE INTO BASIC_CHARGE
		FROM MOBILE_PLANS M JOIN ACCOUNT A
		ON A.PLAN_ID=M.PLAN_ID
		WHERE ACCOUNT_ID=ACC_ID;
		
		INSERT INTO BILLS VALUES(NEXTBILLID,START_DATE,END_DATE,BASIC_CHARGE+TOT_CHARGE,END_DATE+10,'N',ACC_ID,0,BASIC_CHARGE+TOT_CHARGE);
	CLOSE c_bill;
END;
